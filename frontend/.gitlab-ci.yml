variables:
  VERSION: 1.0.${CI_PIPELINE_ID}
  TG_URL: 'https://api.telegram.org/${TG_TOKEN}'

build-frontend-code-job:
  stage: build
  script:        
    - cd frontend
    - npm install
    - npm run build
  artifacts:
    paths:
      - frontend/dist/frontend

sonarqube-frontend-sast:
  stage: test
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/frontend/.sonar"
    GIT_DEPTH: "0"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - frontend/.sonar/cache
  script:
    - cd frontend
    - >
      sonar-scanner -Dsonar.qualitygate.wait=true 
      -Dsonar.projectKey=${SONAR_PROJECT_KEY_FRONT}
      -Dsonar.sources=.
      -Dsonar.host.url=${SONARQUBE_URL} 
      -Dsonar.login=${SONAR_LOGIN_FRONT}
  needs:
    - build-frontend-code-job

upload-frontend-release:
  stage: release
  script:
    - cd frontend/dist   
    - tar czvf sausage-store-$VERSION.tar.gz frontend
    - >
      curl -v -u "${NEXUS_REPO_USER}:${NEXUS_REPO_PASS}"
      --upload-file sausage-store-$VERSION.tar.gz
      ${NEXUS_REPO_URL}/repository/${NEXUS_REPO_FRONTEND_NAME}/$VERSION/sausage-store-$VERSION.tar.gz
  needs:
    - build-frontend-code-job

telegram-notification-frontend:
  stage: notify
  only:
    variables:
      - $CI_COMMIT_MESSAGE =~ /send notification/
  script:
    - 'curl --request POST --header "Content-Type: application/json" --data "{\"chat_id\": \"-1002185373712\", \"text\": \"Артем К. Практическая 3 - фронтенд + SonarQube. Ссылка $CI_PROJECT_URL/-/jobs/artifacts/$CI_COMMIT_SHA/download?job=build-frontend-code-job\"}" $TG_URL/sendMessage'
  needs:
    - build-frontend-code-job
